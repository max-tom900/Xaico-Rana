const TIMEOUT_SECONDS = 120; // ‡¶ó‡ßá‡¶Æ ‡¶ü‡¶æ‡¶á‡¶Æ‡¶Ü‡¶â‡¶ü (‡¶∏‡ßá‡¶ï‡ßá‡¶®‡ßç‡¶°)

// **‡¶Ö‡¶¨‡¶∏‡ßç‡¶•‡¶æ ‡¶ü‡ßç‡¶∞‡ßç‡¶Ø‡¶æ‡¶ï ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶¶‡ßÅ‡¶á‡¶ü‡¶ø Map ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá**
const ongoingFights = new Map(); // ‡¶ö‡¶≤‡¶Æ‡¶æ‡¶® ‡¶´‡¶æ‡¶á‡¶ü ‡¶ü‡ßç‡¶∞‡ßç‡¶Ø‡¶æ‡¶ï ‡¶ï‡¶∞‡¶§‡ßá
const gameInstances = new Map(); // ‡¶ó‡ßá‡¶Æ ‡¶á‡¶®‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶∏ ‡¶∏‡¶Ç‡¶∞‡¶ï‡ßç‡¶∑‡¶£ ‡¶ï‡¶∞‡¶§‡ßá

module.exports = {
  config: {
    name: "fight",
    version: "1.0",
    author: "Shikaki",
    countDown: 10,
    role: 0,
    shortDescription: {
      vi: "",
      en: "Fight with your friends!",
    },
    longDescription: {
      vi: "",
      en: "Challenge your friends to a fight and see who wins!",
    },
    category: "üéÆ Game",
    guide: "{prefix}fight @mention",
  },

  onStart: async function ({ event, message, api, usersData, args }) {
    const threadID = event.threadID;

    // **‡¶Ø‡¶¶‡¶ø ‡¶á‡¶§‡¶ø‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá‡¶á ‡¶´‡¶æ‡¶á‡¶ü ‡¶ö‡¶≤‡¶Æ‡¶æ‡¶® ‡¶•‡¶æ‡¶ï‡ßá**
    if (ongoingFights.has(threadID)) {
      return message.send("‚öîÔ∏è ‡¶è‡¶á ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™‡ßá ‡¶á‡¶§‡¶ø‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá‡¶á ‡¶è‡¶ï‡¶ü‡¶ø ‡¶´‡¶æ‡¶á‡¶ü ‡¶ö‡¶≤‡¶õ‡ßá!");
    }

    // **‡¶è‡¶ï‡¶ú‡¶® ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶™‡¶ï‡ßç‡¶∑ ‡¶â‡¶≤‡ßç‡¶≤‡ßá‡¶ñ ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá ‡¶ï‡¶ø‡¶®‡¶æ ‡¶§‡¶æ ‡¶Ø‡¶æ‡¶ö‡¶æ‡¶á ‡¶ï‡¶∞‡ßÅ‡¶®**
    const mention = Object.keys(event.mentions);
    if (mention.length !== 1) {
      return message.send("ü§î ‡¶¶‡ßü‡¶æ ‡¶ï‡¶∞‡ßá ‡¶è‡¶ï‡¶ú‡¶® ‡¶¨‡ßç‡¶Ø‡¶ï‡ßç‡¶§‡¶ø‡¶ï‡ßá ‡¶Æ‡ßá‡¶®‡¶∂‡¶® ‡¶ï‡¶∞‡ßÅ‡¶® ‡¶´‡¶æ‡¶á‡¶ü ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶ï‡¶∞‡¶§‡ßá!");
    }

    // **‡¶´‡¶æ‡¶á‡¶ü‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶™‡ßç‡¶≤‡ßá‡ßü‡¶æ‡¶∞ ‡¶∏‡ßá‡¶ü‡¶Ü‡¶™ ‡¶ï‡¶∞‡ßÅ‡¶®**
    const challengerID = event.senderID;
    const opponentID = mention[0];

    const challenger = await usersData.getName(challengerID);
    const opponent = await usersData.getName(opponentID);

    // **‡¶´‡¶æ‡¶á‡¶ü ‡¶Ö‡¶¨‡¶ú‡ßá‡¶ï‡ßç‡¶ü ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡ßÅ‡¶®**
    const fight = {
      participants: [
        { id: challengerID, name: challenger, hp: 100 },
        { id: opponentID, name: opponent, hp: 100 },
      ],
      currentPlayer: Math.random() < 0.5 ? challengerID : opponentID, // ‡¶∞‚Äç‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶Æ ‡¶™‡ßç‡¶∞‡¶•‡¶Æ ‡¶™‡ßç‡¶≤‡ßá‡ßü‡¶æ‡¶∞ ‡¶®‡¶ø‡¶∞‡ßç‡¶ß‡¶æ‡¶∞‡¶£
      threadID: threadID,
      startTime: null,
    };

    // **‡¶ó‡ßá‡¶Æ ‡¶á‡¶®‡¶∏‡ßç‡¶ü‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶∏ ‡¶∏‡¶Ç‡¶∞‡¶ï‡ßç‡¶∑‡¶£ ‡¶ï‡¶∞‡ßÅ‡¶®**
    gameInstances.set(threadID, {
      fight: fight,
      lastAttack: null,
      lastPlayer: null,
      timeoutID: null,
      turnMessageSent: false,
    });

    // **‡¶´‡¶æ‡¶á‡¶ü ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶ï‡¶∞‡ßÅ‡¶®**
    startFight(message, fight);
    startTimeout(threadID, message);
  },

  // **üîÑ ‡¶Ö‡¶®-‡¶ö‡ßç‡¶Ø‡¶æ‡¶ü ‡¶á‡¶≠‡ßá‡¶®‡ßç‡¶ü**
  onChat: async function ({ event, message }) {
    const threadID = event.threadID;
    const gameInstance = gameInstances.get(threadID);
    if (!gameInstance) return;

    const currentPlayerID = gameInstance.fight.currentPlayer;
    const currentPlayer = gameInstance.fight.participants.find(p => p.id === currentPlayerID);
    const attack = event.body.trim().toLowerCase();
    const isCurrentPlayer = event.senderID === currentPlayerID;

    // **‡¶Ö‡¶®‡ßç‡¶Ø‡¶ú‡¶®‡ßá‡¶∞ ‡¶ü‡¶æ‡¶∞‡ßç‡¶® ‡¶π‡¶≤‡ßá ‡¶Ü‡¶ï‡ßç‡¶∞‡¶Æ‡¶£ ‡¶Ü‡¶ü‡¶ï‡¶æ‡¶®‡ßã ‡¶π‡¶¨‡ßá**
    if (!isCurrentPlayer) {
      return message.send(`üòí ‡¶è‡¶ñ‡¶® ${currentPlayer.name}-‡¶è‡¶∞ ‡¶ü‡¶æ‡¶∞‡ßç‡¶®! ‡¶Ü‡¶™‡¶®‡¶ø ‡¶è‡¶ñ‡¶® ‡¶Ü‡¶ï‡ßç‡¶∞‡¶Æ‡¶£ ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶¨‡ßá‡¶® ‡¶®‡¶æ‡•§`);
    }

    // **‡¶´‡¶æ‡¶á‡¶ü‡ßá‡¶∞ ‡¶¨‡¶ø‡¶≠‡¶ø‡¶®‡ßç‡¶® ‡¶ï‡ßá‡¶∏ ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡ßá‡¶≤ ‡¶ï‡¶∞‡¶æ**
    if (attack === "forfeit") {
      message.send(`üèÉ ${currentPlayer.name} ‡¶Ü‡¶§‡ßç‡¶Æ‡¶∏‡¶Æ‡¶∞‡ßç‡¶™‡¶£ ‡¶ï‡¶∞‡¶≤! ‡¶¨‡¶ø‡¶ú‡ßü‡ßÄ: ${gameInstance.fight.participants.find(p => p.id !== currentPlayerID).name}!`);
      return endFight(threadID);
    } else if (["kick", "punch", "slap"].includes(attack)) {
      const damage = Math.random() < 0.1 ? 0 : Math.floor(Math.random() * 20 + 10);
      const opponent = gameInstance.fight.participants.find(p => p.id !== currentPlayerID);
      opponent.hp -= damage;

      message.send(`ü•ä ${currentPlayer.name} ‡¶Ü‡¶ï‡ßç‡¶∞‡¶Æ‡¶£ ‡¶ï‡¶∞‡¶≤‡ßã ${opponent.name}-‡¶ï‡ßá! **${damage} ‡¶°‡ßç‡¶Ø‡¶æ‡¶Æ‡ßá‡¶ú** ‡¶¶‡ßá‡¶ì‡ßü‡¶æ ‡¶π‡¶≤‡ßã!\n\nü©∏ ${opponent.name}-‡¶è‡¶∞ HP: ${opponent.hp}`);

      if (opponent.hp <= 0) {
        message.send(`üèÜ ‡¶¨‡¶ø‡¶ú‡ßü‡ßÄ: ${currentPlayer.name}! ${opponent.name} ‡¶™‡¶∞‡¶æ‡¶ú‡¶ø‡¶§ ‡¶π‡ßü‡ßá‡¶õ‡ßá!`);
        return endFight(threadID);
      }

      // **‡¶ü‡¶æ‡¶∞‡ßç‡¶® ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®**
      gameInstance.fight.currentPlayer = opponent.id;
      message.send(`üîÑ ‡¶è‡¶ñ‡¶® ${opponent.name}-‡¶è‡¶∞ ‡¶ü‡¶æ‡¶∞‡ßç‡¶®!`);
    } else {
      message.reply("‚ùå **‡¶≠‡ßÅ‡¶≤ ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶°!** ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßÅ‡¶®: 'kick', 'punch', 'slap', 'forfeit'");
    }
  },
};

// **üé¨ ‡¶´‡¶æ‡¶á‡¶ü ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®**
function startFight(message, fight) {
  ongoingFights.set(fight.threadID, fight);
  const currentPlayer = fight.participants.find(p => p.id === fight.currentPlayer);
  const opponent = fight.participants.find(p => p.id !== fight.currentPlayer);

  message.send(
    `‚öîÔ∏è **${currentPlayer.name} ‡¶ö‡ßç‡¶Ø‡¶æ‡¶≤‡ßá‡¶û‡ßç‡¶ú ‡¶ï‡¶∞‡¶≤‡ßã ${opponent.name}-‡¶ï‡ßá!**\n\n` +
    `ü©∏ ‡¶â‡¶≠‡ßü‡ßá‡¶∞ HP: **${currentPlayer.hp}**\n` +
    `üé≤ **${currentPlayer.name} ‡¶™‡ßç‡¶∞‡¶•‡¶Æ‡ßá ‡¶Ü‡¶ï‡ßç‡¶∞‡¶Æ‡¶£ ‡¶ï‡¶∞‡¶¨‡ßá!**\n\n` +
    `üõ°Ô∏è ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶°: *kick, punch, slap, forfeit*`
  );
}

// **‚è≥ ‡¶ü‡¶æ‡¶á‡¶Æ‡¶Ü‡¶â‡¶ü ‡¶∏‡ßá‡¶ü‡¶Ü‡¶™**
function startTimeout(threadID, message) {
  const timeoutID = setTimeout(() => {
    const gameInstance = gameInstances.get(threadID);
    if (gameInstance) {
      const winner = gameInstance.fight.participants.reduce((a, b) => (a.hp > b.hp ? a : b));
      message.send(`‚è∞ ‡¶ü‡¶æ‡¶á‡¶Æ‡¶Ü‡¶â‡¶ü! **${winner.name}** ‡¶ú‡¶ø‡¶§‡ßá ‡¶ó‡ßá‡¶≤ ‡¶ï‡¶æ‡¶∞‡¶£ ‡¶§‡¶æ‡¶∞ ‡¶¨‡ßá‡¶∂‡¶ø HP ‡¶õ‡¶ø‡¶≤!`);
      endFight(threadID);
    }
  }, TIMEOUT_SECONDS * 1000);

  gameInstances.get(threadID).timeoutID = timeoutID;
}

// **üèÅ ‡¶´‡¶æ‡¶á‡¶ü ‡¶∂‡ßá‡¶∑ ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®**
function endFight(threadID) {
  ongoingFights.delete(threadID);
  const gameInstance = gameInstances.get(threadID);
  if (gameInstance?.timeoutID) {
    clearTimeout(gameInstance.timeoutID);
  }
  gameInstances.delete(threadID);
}
